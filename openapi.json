{
  "openapi": "3.0.1",
  "info": {
    "title": "Dostavim",
    "version": "0.1"
  },
  "paths": {
    "/orders": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "description": "Возвращает массив заказов авторизированного пользователя",
        "operationId": "getPersonOrders",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество заказов в выдаче. Если параметр не передан, то значение по умолчанию равно 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Количество заказов, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Необходимость в передаче списка продуктов заказа. Если параметр не передан, то значение по умолчанию равно true",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/OrderDto"
                      },
                      {
                        "$ref": "#/components/schemas/DetailedOrderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "order-controller"
        ],
        "description": "Создание заказа для текущего авторизированного пользователя.",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOrderDto"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "description": "Возвращает заказ, соответствующий идентификатору",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOrderDto"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orders/all": {
      "get": {
        "tags": [
          "order-controller"
        ],
        "description": "Возвращает массив всех заказов в системе",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество заказов в выдаче. Если параметр не передан, то значение по умолчанию равно 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Количество заказов, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "detailed",
            "in": "query",
            "description": "Необходимость в передаче списка продуктов заказа. Если параметр не передан, то значение по умолчанию равно false",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/OrderDto"
                      },
                      {
                        "$ref": "#/components/schemas/DetailedOrderDto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sign/up": {
      "post": {
        "tags": [
          "sign-controller"
        ],
        "description": "Регистрация пользователя в системе",
        "operationId": "signUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpPersonDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jwt_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sign/in": {
      "post": {
        "tags": [
          "sign-controller"
        ],
        "description": "Авторизация пользователя",
        "operationId": "signIn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInPersonDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jwt_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/update_info": {
      "post": {
        "tags": [
          "person-controller"
        ],
        "description": "Обновление информации пользователя",
        "operationId": "updatePersonInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonInfoDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "category-controller"
        ],
        "description": "Возвращает массив всех категорий в системе",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество категорий в выдаче. Если параметр не передан, то значение по умолчанию равно 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Количество категорий, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "category-controller"
        ],
        "description": "Создание категории в системе",
        "operationId": "createCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants": {
      "get": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Возвращает массив всех ресторанов в системе",
        "operationId": "getRestaurants",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество ресторанов в выдаче. Если параметр не передан, то значение по умолчанию равно 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Количество ресторанов, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestaurantDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Создает ресторан в системе",
        "operationId": "createRestaurant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestaurantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/{id}": {
      "get": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Возвращает ресторан, соответствующий идентификатору",
        "operationId": "getRestaurant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Restaurant identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantDto"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Удалят ресторан, соответствующий идентификатору из системы",
        "operationId": "deleteRestaurant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Restaurant identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/{id}/edit": {
      "patch": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Обновляет информация о ресторане, с соответствующим идентификатором",
        "operationId": "updateRestaurant",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Restaurant identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestaurantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/restaurants/add_product": {
      "post": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Добавляет продукты в определенном количестве в ресторан, с соответствующим идентификатором. Если данных продуктов не существовало в ресторане до этого, они создатся с указанным количеством, иначе количество имеющихся продуктов увеличится на указанное в запросе.",
        "operationId": "addOrUpdateProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToRestaurantDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products-controller"
        ],
        "description": "Возвращает массив всех товаров в системе",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество товаров в выдаче. Если параметр не передан, то значение по умолчанию равно 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Количество товаро, которое нужно пропустить для отображения текущей страницы. Если параметр не передан, то значение по умолчанию равно 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "restaurant_id",
            "in": "query",
            "description": "Идентефикатор ресторана, товары которого необходимо получить. Если параметр не передан, возвращаются товары всех ресторанов.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products-controller"
        ],
        "description": "Создание товара в системе",
        "operationId": "createProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "products-controller"
        ],
        "description": "Возвращает товар, соответствующий идентификатору",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "restaurant-controller"
        ],
        "description": "Удалят продукт, соответствующий идентификатору из системы",
        "operationId": "deleteProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Products identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/edit": {
      "patch": {
        "tags": [
          "products-controller"
        ],
        "description": "Обновляет информация о товаре, с соответствующим идентификатором",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateOrderDto": {
        "required": [
          "restaurant_id",
          "products"
        ],
        "type": "object",
        "properties": {
          "restaurant_id": {
            "type": "integer",
            "format": "int64"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductDto"
            }
          }
        }
      },
      "CreateOrderRequest": {
        "required": [
          "orders"
        ],
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderDto"
            }
          }
        }
      },
      "OrderDto": {
        "required": [
          "id",
          "weight",
          "cost",
          "order_date",
          "order_status",
          "restaurant_id",
          "person_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "order_status": {
            "type": "string"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int64"
          },
          "person_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateOrderProductDto": {
        "required": [
          "product_id",
          "name",
          "price",
          "weight",
          "count"
        ],
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DetailedOrderDto": {
        "required": [
          "id",
          "weight",
          "cost",
          "order_date",
          "order_status",
          "restaurant_id",
          "person_id",
          "products"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "order_status": {
            "type": "string"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int64"
          },
          "person_id": {
            "type": "integer",
            "format": "int64"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductDto"
            }
          }
        }
      },
      "OrderProductDto": {
        "properties": {
          "order": {
            "$ref": "#/components/schemas/OrderDto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CategoryDto": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateCategoryDto": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "ProductDto": {
        "required": [
          "id",
          "name",
          "price",
          "weight",
          "description",
          "category"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryDto"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateProductDto": {
        "required": [
          "name",
          "price",
          "weight",
          "description",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/CreateCategoryDto"
          }
        }
      },
      "AddProductToRestaurantDto": {
        "required": [
          "product_id",
          "restaurant_id",
          "count"
        ],
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "restaurant_id": {
            "type": "integer",
            "format": "int64"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateRestaurantDto": {
        "required": [
          "name",
          "address",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RestaurantDto": {
        "required": [
          "id",
          "name",
          "address",
          "description"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SignInPersonDto": {
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "SignUpPersonDto": {
        "required": [
          "email",
          "name",
          "password",
          "phone_number"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "format": "phone"
          }
        }
      },
      "UpdatePersonInfoDto": {
        "required": [
          "name",
          "address"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "OkRequestResponse": {
        "type": "object"
      },
      "BadRequestResponse": {
        "type": "object"
      },
      "UnauthorizedResponse": {
        "type": "object"
      },
      "ForbiddenResponse": {
        "type": "object"
      },
      "NotFoundResponse": {
        "type": "object"
      }
    }
  }
}
